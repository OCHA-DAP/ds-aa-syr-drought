
## Agricultural Stress Index (ASI) Analysis 

Syria 2024/2025 Drought Season

This section analyzes the evolution and spatial distribution of the Agricultural Stress Index (ASI) across Syrian governorates during the critical 2024/2025 winter cropping season (November 2024 to April 2025), a period highlighted in FAO’s drought alert as the most severe in 36 years.

We use ASI data obtained through the `cumulus` R package via FAO GIEWS, filtered by province and dekad to explore stress trends across crop-growing areas.




```{r}
rp_empirical <- function(x, direction = c("1", "-1"), ties_method = "average") {
    direction <- as.numeric(rlang::arg_match(direction))
    rank <- rank(x * direction, ties.method = ties_method)
    q_rank <- rank / (length(x) + 1)
    rp <- 1 / q_rank
    return(rp)
}
```

```{r}
box::use(
    cumulus
)
box::use(
    lubridate[...],
    dplyr[...],
    tidyr[...],
    readr[...],
    purrr[...], 
    ggplot2[...],
    glue[...],
    forcats[...],
    gghdx[...],
    sf[...]
)
gghdx()
df_asi <- cumulus$fao_asi_adm1_tabular(iso3 = "som")
df_vhi <- cumulus$fao_vhi_adm1_tabular(iso3 = "som")
gdf <- cumulus$download_fieldmaps_sf(iso3 = "som", layer = "som_adm1")


df_asi |> count(Land_Type)

```

```{r}
df_filtered |> select(contains("mo"))
df_filtered <- df_asi |>
    mutate(
        mo_num = as.numeric(Month),
        harvest_year = case_when(
            mo_num %in% c(11, 12) ~ Year + 1,
            TRUE ~ Year
        ),
        mo_chr = fct_expand(month.abb[mo_num], month.abb),
        date = glue("{Year}-{Month}-21")
    ) |>
    filter(
        Dekad == 3,
        # June/early july should be peak growing from Gu rainfall
        mo_num %in% c(4:7)
    ) |>
    mutate(
        mo_fct = fct_relevel(mo_chr,month.abb[4:7]),
        harvest_year_label = case_when(
            harvest_year %in% c(2023:2025) ~ as.character(harvest_year),
            .default = "Other"
        ),
        alpha_flag = if_else(harvest_year_label == "Other", "low", "high") # for alpha mapping
    )

df_rps <- df_filtered |>
    group_by(ADM1_CODE, Province, mo_num, mo_chr) |>
    mutate(
        rp_empirical = rp_empirical(
            Data,
            ties_method = "average",
            direction = "-1"
        )
    ) |>
    arrange(
        Province, mo_chr
    )


df_rps_2025 <- df_rps |>
    filter(
        harvest_year == 2025
    )
```

## ASI Over the Season

The numbers represent the return period of the ASI values for the 2025 harvest year (calculated empirically).

```{r}
df_filtered |>
    mutate(
        # mo_fct = fct_relevel(mo_chr, c("Nov", "Dec", "Jan", "Feb", "Mar", "Apr")),
        harvest_year_label = case_when(
            harvest_year %in% c(2023:2025) ~ as.character(harvest_year),
            .default = "Other"
        ),
        alpha_flag = if_else(harvest_year_label == "Other", "low", "high") # for alpha mapping
    ) |>
    ggplot(
        aes(
            x = mo_fct,
            y = Data,
            group = harvest_year,
            color = harvest_year_label,
            alpha = alpha_flag
        )
    ) +
    geom_text(
        data = df_rps_2025,
        aes(label = scales::number(rp_empirical, accuracy = 1), vjust = -.5),
        show.legend = FALSE, size=4
    ) +

    expand_limits(y = max(df_filtered$Data, na.rm = TRUE) * 1.3) +
    labs(
      title = "Yearly ASI over the Gu season per province",
      color = "Harvest Year",
      y = "ASI",
      caption = "Approximate return periods labelled for current year (2025)\nMissing data indicates no ASI available, which occurs when there is no cropping area in season"
      ) +
    scale_alpha_manual(values = c("low" = 0.3, "high" = 1), guide = "none") +
    geom_line() +
    facet_wrap(~Province) +
    theme(
      plot.title = element_text(size=20),
        axis.text.x = element_text(angle = 90,size=14),
        axis.text.y = element_text(angle = 0,size=14),
        strip.text = element_text(size=16),
        axis.title.x = element_blank(),plot.caption = element_text(hjust=0)
    )

```


```{r}
#| echo: false



gdf_som_adm1_asi <- gdf_som_adm1 |>
    left_join(
        df_rps_2025 , 
        # unfiltered to find what are missing from all months
            # filter(mo_chr == "Jun"),
        by = c("adm1_harm" = "Province")
    )

# Non matching joins
gdf_som_adm1_asi |> 
  group_by(ADM1_EN) |> 
  filter(all(is.na(rp_empirical))) |> 
  pull(ADM1_EN) |> 
  unique()


# trouble shooting name differences
# All COD
gdf$som_adm1$ADM1_EN |> unique()

df_asi$Province |> unique()
# df_rps_2025$Province |> unique()

# Missing from FAO completely

# Bari


```

```{r}
gdf_som_adm1 |> 
  mutate(
    adm1_name_harm = case_when(
      ADM1_EN == "Middle Shabelle"~ "Shabelle Dhexe", 
      ADM1_EN== "Lower Shabelle" ~  "Shabelle Hoose",
      ADM1_EN== "Middle Juba" ~  "Juba Dhexe" ,
      ADM1_EN== "Lower Juba" ~  "Juba Hoose" ,
      .default = ADM1_EN
    )
  ) |> 
     left_join(
        df_rps_2025 , 
        # unfiltered to find what are missing from all months
            # filter(mo_chr == "Jun"),
        by = c("adm1_name_harm" = "Province")
    ) |> 
  group_by(
    adm1_name_harm
  ) |> 
  filter(
    all(is.na(ADM1_CODE))
  ) 

```


## Map
```{r}
#| warning: false
#| fig.height: 7



 gdf_adm1_harm <- gdf_som_adm1 |> 
  mutate(
    adm1_name_harm = case_when(
      ADM1_EN == "Middle Shabelle"~ "Shabelle Dhexe", 
      ADM1_EN== "Lower Shabelle" ~  "Shabelle Hoose",
      ADM1_EN== "Middle Juba" ~  "Juba Dhexe" ,
      ADM1_EN== "Lower Juba" ~  "Juba Hoose" ,
      .default = ADM1_EN
    )
  )
 
 gdf_adm1_asi <- c("May","Jun") |> 
   map(
     \(mo_tmp){
       gdf_adm1_harm |> 
         left_join(
           df_rps_2025 |>  
             # unfiltered to find what are missing from all months
             filter(mo_chr ==mo_tmp),
           by = c("adm1_name_harm" = "Province")
         ) |> 
         mutate(
           mo_map = mo_tmp
         )
     }
   ) |> 
   bind_rows()

 class(gdf_adm1_harm)
 class(gdf_adm1_asi)
 # gdf_adm1_asi <- gdf_adm1_harm |> 
 #     left_join(
 #        df_rps_2025 |>  
 #        # unfiltered to find what are missing from all months
 #            filter(mo_chr %in% c("May")),
 #        by = c("adm1_name_harm" = "Province")
 #    ) 
  
# gdf_adm1_asi <- gdf_som_adm1 |> 
#   mutate(
#     adm1_name_harm = case_when(
#       ADM1_EN == "Middle Shabelle"~ "Shabelle Dhexe", 
#       ADM1_EN== "Lower Shabelle" ~  "Shabelle Hoose",
#       ADM1_EN== "Middle Juba" ~  "Juba Dhexe" ,
#       ADM1_EN== "Lower Juba" ~  "Juba Hoose" ,
#       .default = ADM1_EN
#     )
#   ) |> 
#      left_join(
#         df_rps_2025 |>  
#         # unfiltered to find what are missing from all months
#             filter(mo_chr %in% c("May","Jun")),
#         by = c("adm1_name_harm" = "Province")
#     ) 
#   


gdf_adm1_asi <- gdf_adm1_asi |>
    mutate(
        rp_bin = as.character(cut(
            rp_empirical,
            breaks = c(-Inf, 2, 5, 10, 20, Inf),
            labels = c("<2", "2-5", "5-10", "10-20", "≥20"),
            right = FALSE
        )),
        rp_bin = ifelse(is.na(rp_bin), "No ASI Data",rp_bin),
        mo_map = fct_relevel(fct_expand(mo_map, "May","Jun"),"May" ,"Jun")
    )


ggplot() +
  geom_sf(
    data = gdf_adm1_asi ,
    aes(fill = rp_bin), color = "black"
  ) +
  scale_fill_manual(
    values = c(
      "<2" = "#ffffff",
      "2-5" = "#ffffcc",
      "5-10" = "#ffeda0",
      "10-20" = "#feb24c",
      "≥20" = "#f03b20",
      "No ASI Data" = "grey"
    ), 
    name = "Return Period"
  )+
  ggfx::with_outer_glow(
    geom_sf_text(data= gdf_adm1_asi,
                 aes(label = ADM1_EN)),
    colour = 'white',
    sigma = 1,
    expand = 3
  )+ 
  facet_wrap(~mo_map)+
  # theme_void()+
  labs(
    title = "2025 ASI Return Periods by Month"
  )+
  theme(
    axis.text = element_blank(),
    axis.title = element_blank()
  )

```

